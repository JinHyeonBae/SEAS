-- 컴퓨터 구조

-- Insert into seas.flashcard
INSERT INTO seas.flashcard (id, keyword, created_at, updated_at, category_id)
VALUES
    (11, '중앙처리장치 (CPU; Central Processing Unit)', NOW(), NOW(), 5),
    (12, '메모리 (Memory)', NOW(), NOW(), 5),
    (13, '시스템 버스 (System Bus)', NOW(), NOW(), 5),
    (14, '레지스터 (Register)', NOW(), NOW(), 5),
    (15, '명령어 세트 (Instruction Set)', NOW(), NOW(), 5),
    (16, '파이프라인 (Pipeline)', NOW(), NOW(), 5),
    (17, '캐시 (Cache)', NOW(), NOW(), 5),
    (18, '시스템 클럭 (System Clock)', NOW(), NOW(), 5),
    (19, '인터럽트 (Interrupt)', NOW(), NOW(), 5),
    (20, '펌웨어 (Firmware)', NOW(), NOW(), 5);

-- Insert into seas.flashcard_content
INSERT INTO seas.flashcard_content (id, content, created_at, updated_at, flashcard_id)
VALUES
    (20, '컴퓨터의 뇌로서, 프로그램에서 명령어를 해석하고 실행하는 핵심 부품', NOW(), NOW(), 11),
    (21, '제어 유닛은 명령어를 해독하고 실행하는 역할을 하며, 산술 논리 연산 장치(ALU)는 산술 연산과 논리 연산을 수행', NOW(), NOW(), 11),
    (22, '레지스터는 매우 빠른 속도로 데이터를 저장하고 처리하는데 사용', NOW(), NOW(), 11),

    (23, '데이터와 명령을 저장하는 공간', NOW(), NOW(), 12),
    (24, '주 기억장치(RAM)는 현재 실행 중인 프로그램과 데이터를 저장하며, 보조 기억장치(하드 디스크, SSD)는 영구적인 데이터 저장을 담당', NOW(), NOW(), 12),
    (25, '캐시도 메모리의 일종으로, 빠른 데이터 접근을 위해 사용', NOW(), NOW(), 12),

    (26, 'CPU, 메모리, 그리고 입출력 장치 등 각 구성 요소 간에 데이터, 주소, 제어 신호를 전송하는 통로', NOW(), NOW(), 13),
    (27, '주소 버스는 메모리 위치를 지정하고, 데이터 버스는 실제 데이터를 전송하며, 제어 버스는 명령과 상태 정보를 전송', NOW(), NOW(), 13),

    (28, 'CPU 내부에 위치한 소량의 고속 기억장치', NOW(), NOW(), 14),
    (29, '현재 수행 중인 명령어나 연산에 필요한 데이터를 일시적으로 저장', NOW(), NOW(), 14),
    (30, '레지스터는 ALU에서의 계산에 필수적이며, 레지스터의 크기와 수는 CPU의 성능에 영향을 미침', NOW(), NOW(), 14),

    (31, 'CPU가 이해하고 실행하는 명령어의 집합', NOW(), NOW(), 15),
    (32, '각 명령어는 특정한 동작을 수행하며, 이러한 명령어들을 조합하여 프로그램이 동작', NOW(), NOW(), 15),

    (33, '명령어 처리를 여러 단계로 분할하여 병렬적으로 실행하는 구조', NOW(), NOW(), 16),
    (34, '이를 통해 여러 명령어가 동시에 처리되어 CPU의 성능이 향상', NOW(), NOW(), 16),

    (35, '빠른 속도로 접근 가능한 작은 용량의 메모리', NOW(), NOW(), 17),
    (36, 'CPU가 자주 사용하는 데이터를 일시적으로 저장하여 메인 메모리에 접근하는 속도를 향상', NOW(), NOW(), 17),
    (37, '주로 L1, L2, L3 캐시로 구성', NOW(), NOW(), 17),

    (38, '전체 시스템의 동기화를 담당하는 신호', NOW(), NOW(), 18),
    (39, 'CPU와 다른 시스템 구성 요소의 동작 주기를 조절', NOW(), NOW(), 18),
    (40, '클럭 주파수가 높을수록 더 빠른 연산이 가능', NOW(), NOW(), 18),

    (41, 'CPU가 현재 수행 중인 작업을 중단하고 외부 이벤트에 대응하는 메커니즘', NOW(), NOW(), 19),
    (42, '하드웨어나 소프트웨어에서 발생할 수 있으며, 시스템의 효율적인 동작과 응답성을 보장', NOW(), NOW(), 19),

    (43, '내장된 소프트웨어로, 하드웨어 초기화, 부팅, 기본 시스템 설정 및 제어를 담당', NOW(), NOW(), 20),
    (44, '주로 ROM 또는 플래시 메모리에 저장되며, 시스템의 안정성과 동작을 지원', NOW(), NOW(), 20),
    (45, '펌웨어는 업데이트 가능하며, 제조사가 제공하는 업데이트로 기능 확장 가능', NOW(), NOW(), 20);


-- 알고리즘
-- Inserting data into seas.flashcard
INSERT INTO seas.flashcard (id, keyword, created_at, updated_at, category_id)
VALUES
    (21, '버블 소트 (Bubble Sort)', NOW(), NOW(), 4),
    (22, '동적 계획법 (다이나믹 프로그래밍)', NOW(), NOW(), 4),
    (23, '크루스칼 알고리즘 (Kruskal Algorithm)', NOW(), NOW(), 4),
    (24, '비트 연산자', NOW(), NOW(), 4),
    (25, '이진 탐색 트리 (Binary Search Tree)의 삭제 연산', NOW(), NOW(), 4),
    (26, '인접 행렬', NOW(), NOW(), 4),
    (27, '다익스트라 (Dijkstra Algorithm)', NOW(), NOW(), 4),
    (28, '해시 함수 (Hash Function)', NOW(), NOW(), 4),
    (29, '이진 탐색 (Binary Search)', NOW(), NOW(), 4),
    (30, '깊이 우선 탐색 (DFS / Depth First Search)', NOW(), NOW(), 4);

-- Inserting data into seas.flashcard_content
INSERT INTO seas.flashcard_content (id, content, created_at, updated_at, flashcard_id)
VALUES
    (46, '인접한 두 원소를 비교하면서 필요에 따라 서로 위치를 교환하는 방식', NOW(), NOW(), 21),
    (47, '가장 큰(또는 작은) 원소가 맨 끝으로 이동할 때까지 이 비교와 교환 과정을 반복', NOW(), NOW(), 21),
    (48, '단순하고 이해하기 쉽지만, 정렬해야 하는 원소의 수가 많아질수록 비효율적이며 다른 정렬 알고리즘들보다 느린 성능', NOW(), NOW(), 21),

    (49, '작은 부분 문제들을 풀고, 그 결과를 저장하여 중복 계산을 피하며 최적화하는 알고리즘 기법', NOW(), NOW(), 22),
    (50, '중복된 계산을 피하기 위해 메모이제이션(Memoization) 또는 테이블을 사용하는 방법으로 구현', NOW(), NOW(), 22),

    (51, '그래프의 모든 노드를 최소 비용으로 연결하는 최소 비용 신장 트리(Minimum Spanning Tree)를 찾기 위한 알고리즘 중 하나', NOW(), NOW(), 23),
    (52, '가중치가 가장 작은 간선부터 선택하여 사이클을 피해가며 최소 비용 신장 트리를 구성', NOW(), NOW(), 23),

    (53, '컴퓨터에서 이진수로 표현된 데이터의 각 비트에 대한 연산을 수행하는 데 사용되는 연산자', NOW(), NOW(), 24),
    (54, '주요 비트 연산자로는 AND(&), OR(|), XOR(^), NOT(~) 등이 있다.', NOW(), NOW(), 24),
    (55, '비트 연산은 주로 플래그 조작, 데이터 압축, 네트워크 프로토콜에서의 특정 비트 필드 조작 등 활용', NOW(), NOW(), 24),
    (56, 'a << n : a x 2ⁿ', NOW(), NOW(), 24),
    (57, 'a >> n : a / 2ⁿ', NOW(), NOW(), 24),
    (58, '예시 : (16 << 1) == 32', NOW(), NOW(), 24),

    (59, '이진 탐색 트리 : 각 노드가 최대 두 개의 자식을 가지며, 왼쪽 자식은 현재 노드보다 작은 값을, 오른쪽 자식은 현재 노드보다 큰 값을 가지는 이진 트리의 특별한 형태', NOW(), NOW(), 25),
    (60, '단말 노드 삭제 : 해당 노드를 삭제', NOW(), NOW(), 25),
    (61, '자식이 하나인 노드 삭제 : 해당 노드 삭제 후 자식 노드로 대체', NOW(), NOW(), 25),
    (62, '자식이 둘인 노드 삭제 : 해당 노드 삭제 후 오른쪽 서브트리에서 가장 작은 노드 또는 왼쪽 서브트리에서 가장 큰 노드로 대체', NOW(), NOW(), 25),

    (63, '그래프 이론에서 사용되는 표현 방법 중 하나로, 노드들 간의 연결 관계를 행렬로 나타내는 방식', NOW(), NOW(), 26),
    (64, '간단하게 구현할 수 있고, 노드 간의 연결 여부를 상수 시간 내에 확인할 수 있지만, 그래프의 크기가 크면 메모리 사용량이 증가', NOW(), NOW(), 26),

    (65, '그래프에서 하나의 출발 노드로부터 모든 다른 노드까지의 최단 경로를 찾기 위한 알고리즘', NOW(), NOW(), 27),
    (66, '음의 가중치를 가지지 않는 그래프에서 사용', NOW(), NOW(), 27),
    (67, '주로 우선순위 큐(Priority Queue)를 사용', NOW(), NOW(), 27),

    (68, '임의의 크기의 데이터를 고정된 크기의 값으로 매핑하는 함수', NOW(), NOW(), 28),
    (69, '해시 테이블, 해시 맵 등에서 사용되며, 데이터의 검색, 저장, 식별을 빠르게 하기 위해 활용', NOW(), NOW(), 28),

    (70, '정렬된 배열이나 리스트에서 주어진 데이터와 찾고자 하는 값을 비교하면서 탐색 범위를 반으로 줄여가며 효율적으로 원소를 찾아내는 방법', NOW(), NOW(), 29),
    (71, '각 단계에서 탐색 범위가 절반으로 줄어들기 때문에 시간 복잡도가 O(log n)', NOW(), NOW(), 29),

    (72, '그래프나 트리와 같은 자료 구조에서 모든 노드를 탐색하고자 할 때 사용되는 알고리즘 중 하나', NOW(), NOW(), 30),
    (73, '현재 노드에서 시작하여 다음 분기로 넘어가기 전에 해당 분기를 완전히 탐색하는 방법', NOW(), NOW(), 30),
    (74, 'DFS는 스택을 이용하기 때문에 재귀 호출이나 명시적인 스택을 사용하여 구현', NOW(), NOW(), 30);



-- 네트워크
-- Inserting data into seas.flashcard
INSERT INTO seas.flashcard (id, keyword, created_at, updated_at, category_id)
VALUES
    (31, '라우터 (Router)', NOW(), NOW(), 2),
    (32, '방화벽 (Firewall)', NOW(), NOW(), 2),
    (33, '서버 (Server)', NOW(), NOW(), 2),
    (34, '와이파이 (Wi-Fi; Wireless Fidelity)', NOW(), NOW(), 2),
    (35, '시큐어 셸 (SSH; Secure SHell)', NOW(), NOW(), 2),
    (36, '전송 제어 프로토콜 (TCP; Transmission Control Protocol)', NOW(), NOW(), 2),
    (37, '인터넷 프로토콜 (IP; Internet Protocol)', NOW(), NOW(), 2),
    (38, '게이트웨이 (Gateway)', NOW(), NOW(), 2),
    (39, 'MAC주소 (MAC; MAC address)', NOW(), NOW(), 2),
    (40, '브리지 (Bridge)', NOW(), NOW(), 2);

-- Inserting data into seas.flashcard_content
INSERT INTO seas.flashcard_content (id, content, created_at, updated_at, flashcard_id)
VALUES
    (75, '두 개의 네트워크를 연결하여 통신할 수 있게 해주는 장치', NOW(), NOW(), 31),
    (77, '네트워크에서 특정한 서비스에 대한 접근 권한을 부여하거나 거부하는 보안 기술', NOW(), NOW(), 32),
    (79, '네트워크에서 여러 컴퓨터가 동시에 공유할 수 있는 자원이나 정보를 관리하는 시스템', NOW(), NOW(), 33),
    (80, '클라이언트에게 서비스나 데이터를 제공하는 중심 장치', NOW(), NOW(), 33),
    (82, '무선 네트워크에서 사용되는 기술', NOW(), NOW(), 34),
    (83, '근거리 통신을 위한 무선 통신 규약', NOW(), NOW(), 34),
    (84, '네트워크에서 사용자가 다른 컴퓨터에 접속할 때 사용하는 프로토콜', NOW(), NOW(), 35),
    (85, '원격으로 다른 컴퓨터에 로그인하고 명령을 실행하는 보안 프로토콜', NOW(), NOW(), 35),
    (86, '네트워크에서 사용되는 통신 규약', NOW(), NOW(), 36),
    (87, '전송 계층에서 데이터의 신뢰성을 보장하는 프로토콜', NOW(), NOW(), 36),
    (88, '인터넷에서 사용되는 통신 규약', NOW(), NOW(), 37),
    (89, '전송 계층에서 데이터를 패킷으로 분할하여 전송하는 프로토콜', NOW(), NOW(), 37),
    (90, '데이터의 경로를 결정하고 패킷을 목적지까지 전달하는 역할', NOW(), NOW(), 37),
    (91, '컴퓨터 네트워크에서 서로 다른 네트워크를 연결하여 통신할 수 있게 하는 장치', NOW(), NOW(), 38),
    (92, '서로 다른 네트워크 간의 통신을 중계하고 연결하는 역할', NOW(), NOW(), 38),
    (93, '두 개의 네트워크를 연결하여 통신할 수 있게 해주는 장치', NOW(), NOW(), 39),
    (94, '네트워크 인터페이스 카드에 할당된 고유한 식별자', NOW(), NOW(), 39),
    (95, '네트워크에서 서로 다른 네트워크 간에 통신을 중계하고 연결하는 역할을 하는 장치', NOW(), NOW(), 40);


-- 자료구조
-- Inserting data into seas.flashcard
INSERT INTO seas.flashcard (id, keyword, created_at, updated_at, category_id)
VALUES
    (41, '배열 (Array)', NOW(), NOW(), 3),
    (42, '연결 리스트 (Linked List)', NOW(), NOW(), 3),
    (43, '스택 (Stack)', NOW(), NOW(), 3),
    (44, '큐 (Queue)', NOW(), NOW(), 3),
    (45, '그래프 (Graph)', NOW(), NOW(), 3),
    (46, '트리 (Tree)', NOW(), NOW(), 3),
    (47, '힙 (Heap)', NOW(), NOW(), 3),
    (48, '우선순위 큐 (Priority Queue)', NOW(), NOW(), 3),
    (49, '맵 (Map)', NOW(), NOW(), 3),
    (50, '셋 (Set)', NOW(), NOW(), 3);

-- Inserting data into seas.flashcard_content
INSERT INTO seas.flashcard_content (id, content, created_at, updated_at, flashcard_id)
VALUES
    (96, '같은 타입의 데이터를 모아 관리하기 위해 사용하는 데이터 타입', NOW(), NOW(), 41),
    (97, '인덱스를 가지고, 인덱스로 접근이 가능한 순차적으로 구성된 자료구조', NOW(), NOW(), 41),
    (98, '각 노드가 데이터와 포인터를 가지고 한 줄로 연결된 방식으로 데이터를 저장하는 자료구조', NOW(), NOW(), 42),
    (99, '배열과 다르게 메모리에 순차적으로 배치되어 있지 않음', NOW(), NOW(), 42),
    (100, '후입선출(LIFO)의 구조를 가지는 자료구조', NOW(), NOW(), 43),
    (101, '정해진 방향으로만 접근이 가능하고, 스택의 맨 위에서만 연산 수행 가능', NOW(), NOW(), 43),
    (102, '선입선출의 구조를 가지는 자료구조', NOW(), NOW(), 44),
    (103, '큐의 맨 앞에서만 데이터를 뺄 수 있고, 큐의 뒤로만 데이터를 넣을 수 있음', NOW(), NOW(), 44),
    (104, '노드와 그 노드를 연결하는 간선을 하나로 모아놓은 자료구조', NOW(), NOW(), 45),
    (105, '인접 리스트, 인접 행렬의 방식으로 구현 가능', NOW(), NOW(), 45),
    (106, '사이클이 없이 모든 정점이 연결되어있는 그래프의 일종', NOW(), NOW(), 46),
    (107, '루트 노드가 있으며 노드 간 부모-자식 관계가 있음', NOW(), NOW(), 46),
    (108, '최댓값과 최솟값을 빠르게 찾기 위해 고안된 완전 이진 트리의 형태로 만들어진 자료구조', NOW(), NOW(), 47),
    (109, '부모와 자식 간의 명확한 대소 관계를 파악할 수 있음. 단, 형제 사이에서는 불가능', NOW(), NOW(), 47),
    (110, '우선순위를 가지고 있는 데이터들의 집합.', NOW(), NOW(), 48),
    (111, '우선 순위에 따라 데이터가 처리됨', NOW(), NOW(), 48),
    (112, 'Key-value의 쌍으로 이루어진 자료구조', NOW(), NOW(), 49),
    (113, '기본적으로 데이터를 순차적으로 다루지 않음', NOW(), NOW(), 49),
    (114, '중복을 허용하지 않는 자료 구조', NOW(), NOW(), 50),
    (115, '원소 간 순서가 없기 때문에, 인덱스로 접근 불가', NOW(), NOW(), 50);

-- 운영체제
-- Inserting data into seas.flashcard
INSERT INTO seas.flashcard (id, keyword, created_at, updated_at, category_id)
VALUES
    (51, '다중 작업 (Multi Tasking)', NOW(), NOW(), 6),
    (52, '메모리 맵 파일 (Memory Mapped File)', NOW(), NOW(), 6),
    (53, '파일 시스템 (File System)', NOW(), NOW(), 6),
    (54, '스케줄링 (Scheduling)', NOW(), NOW(), 6),
    (55, '셸 (Shell)', NOW(), NOW(), 6),
    (56, '뮤텍스 (Mutex)', NOW(), NOW(), 6),
    (57, '커널 (Kernel)', NOW(), NOW(), 6),
    (58, '세마포어 (Semaphore)', NOW(), NOW(), 6),
    (59, '페이징 (Paging)', NOW(), NOW(), 6),
    (60, '캐시 메모리 (Cache Memory)', NOW(), NOW(), 6);

-- Inserting data into seas.flashcard_content
INSERT INTO seas.flashcard_content (id, content, created_at, updated_at, flashcard_id)
VALUES
    (116, '운영체제에서 여러 응용 프로그램이 동시에 실행할 수 있게 해주는 기능', NOW(), NOW(), 51),
    (117, '중앙처리장치와 같은 공용 자원을 나누어 사용하여 기능을 제공한다.', NOW(), NOW(), 51),
    (118, '프로세스 간의 통신을 위한 메커니즘 중 하나로, 특정한 공유 메모리 영역을 만들어 데이터를 공유하는 기술', NOW(), NOW(), 52),
    (119, '프로세스의 가상 메모리 주소 공간에 파일을 매핑 한 뒤 가상 메모리 주소에 직접 접근하는 것', NOW(), NOW(), 52),
    (120, '데이터를 저장하고 검색하기 위한 파일과 디렉토리의 조직 체계를 관리하는 시스템 소프트웨어', NOW(), NOW(), 53),
    (121, '하드 디스크, SSD 등의 보조 기억 장치에 파일을 저장하고 관리하는 것', NOW(), NOW(), 53),
    (122, '운영체제에서 실행 중인 프로그램을 효율적으로 관리하고, 필요에 따라 중단하거나 다시 시작하는 기능', NOW(), NOW(), 54),
    (123, '자원을 최대한 공평하게 배분하여 최적화하기 위한 기법', NOW(), NOW(), 54),
    (124, '사용자가 운영체제와 상호작용하기 위한 텍스트 또는 그래픽 기반의 인터페이스를 제공하는 소프트웨어', NOW(), NOW(), 55),
    (125, '명령어 해석기라고도 부르며 윈도우의 cmd, linux/unix의 bash가 대표적인 예', NOW(), NOW(), 55),
    (126, '상호 배제를 위한 동기화 도구로, 공유 자원에 대한 동시 접근을 제어하여 여러 프로세스 또는 쓰레드 간의 데이터 일관성을 보장', NOW(), NOW(), 56),
    (127, '임계구역을 가진 스레드들의 실행시간이 상호배제 되도록 하는 기술', NOW(), NOW(), 56),
    (128, '운영체제에서 하드웨어와 소프트웨어 간의 인터페이스 역할을 하는 중요한 계층', NOW(), NOW(), 57),
    (129, '운영체제의 90%를 차지하는 핵심부분', NOW(), NOW(), 57),
    (130, '프로세스 간의 동기화와 통신을 위한 기술로, 공유 변수의 동시 접근을 제어하는 메커니즘', NOW(), NOW(), 58),
    (131, '사용하고 있는 스레드/프로세스의 수를 공통으로 관리하는 하나의 값을 이용해 상호배제를 달성함', NOW(), NOW(), 58),
    (132, '운영체제에서 메모리를 효율적으로 관리하기 위해 사용되는 메모리 공간 할당 기법 중 하나', NOW(), NOW(), 59),
    (133, '프로세스를 작은 크기로 나누어서 외부 단편화를 해결함', NOW(), NOW(), 59),
    (134, '주 기억장치와 CPU 사이에 위치하여 빠른 데이터 액세스를 제공하며 컴퓨터의 전반적인 성능을 향상을 도모하는 것', NOW(), NOW(), 60),
    (135, '속도가 빠른 장치와 느린 장치간의 속도 차에 따른 병목현상을 줄이기 위한 범용 메모리', NOW(), NOW(), 60);